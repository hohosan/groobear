<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.sevenfs.mapper.mail.MailMapper">

<select id="getAtchFile" parameterType="long" resultType="kr.or.ddit.sevenfs.vo.AttachFileVO">
SELECT
    atch_file_no,
    file_sn,
    file_stre_path,
    file_nm,
    file_stre_nm,
    file_extsn,
    file_mime,
    file_size,
    file_view_size,
    dwld_co,
    empl_no,
    file_use_yn,
    file_creat_dt
FROM
    attatch_file
WHERE 
    atch_file_no = #{atchFileNo}
</select>

<select id="getAtchFileStreList" parameterType="long" resultType="String">
SELECT
    file_stre_path
FROM
    attatch_file
WHERE
	atch_file_no = #{atchFileNo}
</select>

<select id="getList" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO" parameterType="kr.or.ddit.sevenfs.utils.ArticlePage">
SELECT E.EMPL_NM
    ,M.email_no
    ,M.empl_no
    ,M.lbl_no
    ,M.email_trnsmis_ty
    ,M.email_cl_ty
    ,M.trnsmit_email
    ,M.recptn_email
    ,M.email_sj
    ,M.atch_file_no
    ,M.trnsmit_dt
    ,M.readng_at
    ,M.email_group_no
    ,M.starred
    ,ML.LBL_NO
    ,ML.LBL_COL
    ,ML.LBL_NM
FROM MAIL M
INNER JOIN EMPLOYEE E ON M.EMPL_NO = E.EMPL_NO
LEFT JOIN MAIL_LABEL ML ON M.lbl_no = ML.lbl_no
WHERE M.EMPL_NO=#{searchVo.emplNo}
<if test = "searchVo.emailClTy != null and searchVo.emailClTy != ''">
	<choose>
		<when test="searchVo.emailClTy == 5">
			AND m.STARRED = 'Y'
			AND m.email_cl_ty!='4'
		</when>
		<otherwise>
			AND m.EMAIL_CL_TY = #{searchVo.emailClTy}
		</otherwise>
	</choose>
</if>
AND M.DEL_AT = 'N'
<if test = "searchVo.lblNo != 0">
	AND m.LBL_NO = #{searchVo.lblNo}
</if>
	<if test = "searchVo.keyword != null and searchVo.keyword !=''">
		<choose>
			<when test="searchVo.searchOption == 'title'">
				AND m.EMAIL_SJ LIKE '%' || #{searchVo.keyword} || '%'
			</when>
			<when test="searchVo.searchOption == 'content'">
				AND m.EMAIL_CN LIKE '%' || #{searchVo.keyword} || '%'
			</when>
			<otherwise>
				AND (m.EMAIL_SJ '%' || #{mailVO.keyword} || '%'
					 OR m.EMAIL_CN LIKE '%' || #{searchVo.keyword} || '%')
			</otherwise>
		</choose>
	</if>
	ORDER BY TRNSMIT_DT DESC
	OFFSET (#{currentPage} - 1) * 10 ROWS
	FETCH NEXT 10 ROWS ONLY	
</select>

<select id="mailLabeling" parameterType="int" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO">
	SELECT E.EMPL_NM
	    ,M.email_no
	    ,M.empl_no
	    ,M.lbl_no
	    ,M.email_trnsmis_ty
	    ,M.email_cl_ty
	    ,M.trnsmit_email
	    ,M.recptn_email
	    ,M.email_sj
	    ,M.atch_file_no
	    ,M.trnsmit_dt
	    ,M.readng_at
	    ,M.email_group_no
	    ,M.starred
	    ,ML.LBL_NO
	    ,ML.LBL_COL
	    ,ML.LBL_NM
	FROM MAIL M
	INNER JOIN EMPLOYEE E ON M.EMPL_NO = E.EMPL_NO
	LEFT JOIN MAIL_LABEL ML ON M.lbl_no = ML.lbl_no
	where m.lbl_no = #{lblNo}
	  and (m.email_cl_ty = '0' or m.email_cl_ty = '1')
	ORDER BY M.trnsmit_dt DESC
</select>

<select id="emailDetail" parameterType="kr.or.ddit.sevenfs.vo.mail.MailVO" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO">
SELECT 
	(select empl_nm from EMPLOYEE where empl_no=m.empl_no) empl_nm,
    m.email_no,
    m.empl_no,
    m.lbl_no,
    m.email_trnsmis_ty,
    m.email_cl_ty,
    m.trnsmit_email,
    m.recptn_email,
    m.email_sj,
    m.email_cn,
    m.atch_file_no,
    m.trnsmit_dt,
    m.readng_at,
    m.email_group_no,
    m.starred
FROM mail m
WHERE m.email_group_no = (
    SELECT email_group_no
    FROM mail
    WHERE email_no = #{emailNo}
)

</select>

<update id="readingAt" parameterType="int">
	update MAIL
	set readng_at = 'Y'
	where email_no = #{emailNo}
</update>

<select id="emailDetails" parameterType="java.util.List" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO">
 select email_no
 		,email_trnsmis_ty
 		,email_cl_ty
 from mail
 where email_no in
 	<foreach collection="list" item="mail" open="(" close=")" separator=",">
 		#{mail}
 	</foreach>
</select>

<select id="mailRepl" parameterType="kr.or.ddit.sevenfs.vo.mail.MailVO" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO">
	SELECT
	(select empl_nm from EMPLOYEE where empl_no=m.empl_no) empl_nm,
    m.email_no,
    m.empl_no,
    m.lbl_no,
    m.email_trnsmis_ty,
    m.email_cl_ty,
    m.trnsmit_email,
    m.recptn_email,
    m.email_sj,
    m.email_cn,
    m.atch_file_no,
    m.trnsmit_dt,
    m.readng_at,
    m.email_group_no,
    m.starred,
    m.del_at
FROM
    mail m
WHERE email_no = #{emailNo}
</select>

<select id="findEmplByEmail" parameterType="String" resultType="map">
	select 
		empl_nm,
		empl_no
	from employee
	where email=#{email}
</select>

<select id="getTotal" parameterType="hashmap" resultType="int">
SELECT count(*)
FROM mail m
WHERE m.EMPL_NO = #{emplNo}
<if test = "mailVO.emailClTy != null and mailVO.emailClTy != ''">
	<choose>
		<when test="mailVO.emailClTy == 5">
			and m.STARRED = 'Y'
		</when>
		<otherwise>
			AND m.EMAIL_CL_TY = #{mailVO.emailClTy}
		</otherwise>
	</choose>
</if>
AND m.DEL_AT = 'N'
<if test = "mailVO.lblNo != 0">
	AND m.LBL_NO = #{mailVO.lblNo}
</if>
	<if test = "mailVO.keyword != null and mailVO.keyword !=''">
		<choose>
			<when test="mailVO.searchOption == 'title'">
				AND m.EMAIL_SJ LIKE '%' || #{mailVO.keyword} || '%'
			</when>
			<when test="mailVO.searchOption == 'content'">
				AND m.EMAIL_CN LIKE '%' || #{mailVO.keyword} || '%'
			</when>
			<otherwise>
				AND (m.EMAIL_SJ LIKE '%' || #{mailVO.keyword} || '%'
					 OR m.EMAIL_CN LIKE '%' || #{mailVO.keyword} || '%')
			</otherwise>
		</choose>
	</if>
</select>
<select id="getMailNos" parameterType="int" resultType="int">
select SEQ_MAIL.nextval from dual
CONNECT BY LEVEL &lt;= #{count}
</select>

<select id="getEmailGroupNo" resultType="int">
	select nvl(max(email_group_no),0)+1 from mail
</select>


<update id="mailDelete" parameterType="java.util.List">
	update mail
	set email_cl_ty = '4'
	where email_no in
	<foreach collection="list" item="emailNo" open="(" separator="," close=")">
		#{emailNo}	        
	</foreach>
</update>

<update id = "restoration" parameterType="java.util.List">
	BEGIN
	<foreach collection="list" item="mailVO" separator=" " open="" close="">
		update mail
		<choose>
			<when test="mailVO.emailTrnsmisTy==0">
				set email_cl_ty = '0'
			</when>
			<when test="mailVO.emailTrnsmisTy!=0">
				set email_cl_ty = '1'
			</when>
		</choose>
			where email_no = #{mailVO.emailNo};
	</foreach>
	END;
</update>

<update id="mailRealDelete" parameterType="java.util.List">
	update mail
	set DEL_AT = 'Y'
	where email_no in
	<foreach collection="list" item="emailNo" open="(" separator="," close=")">
		#{emailNo}	        
	</foreach>
</update>


<insert id="sendMail" parameterType="list">
        INSERT ALL
            <foreach collection="mailVOList" item="mail" >
                INTO mail(email_no,
					    empl_no,
					    <if test="mail.lblNo!=0">
						    lbl_no,
					    </if>
					    email_trnsmis_ty,
					    email_cl_ty,
					    trnsmit_email,
					    recptn_email,
					    email_sj,
					    email_cn,
					    atch_file_no,
					    email_group_no,
					    readng_at)
                VALUES (
                    #{mail.emailNo},
                    #{mail.emplNo},
                    <if test="mail.lblNo!=0">
	                    #{mail.lblNo},
					</if>
                    #{mail.emailTrnsmisTy},
                    #{mail.emailClTy},
                    #{mail.trnsmitEmail},
                    #{mail.recptnEmail},
                    #{mail.emailSj},
                    #{mail.emailCn},
                    #{mail.atchFileNo},
                    #{mail.emailGroupNo},
                    #{mail.readngAt}
                )
            </foreach>
    	SELECT * FROM dual
</insert>
<insert id="tempStoreEmail" parameterType="list">
INSERT ALL
	<foreach collection="mailVOList" item="mail" >
		INTO mail(email_no,
    	empl_no,
      <if test="mail.lblNo!=0">
	    lbl_no,
      </if>
    	email_trnsmis_ty,
	    email_cl_ty,
	    trnsmit_email,
	    recptn_email,
	    email_sj,
	    email_cn,
	    atch_file_no,
	    email_group_no,
	    DEL_AT
           )VALUES (
               #{mail.emailNo},
               #{mail.emplNo},
              <if test="mail.lblNo!=0">
                #{mail.lblNo},
			  </if>
               #{mail.emailTrnsmisTy},
               #{mail.emailClTy},
               #{mail.trnsmitEmail},
               #{mail.recptnEmail},
               #{mail.emailSj},
               #{mail.emailCn},
               #{mail.atchFileNo},
               #{mail.emailGroupNo},
               #{mail.delAt}
           )
       </foreach>
    	SELECT * FROM dual
</insert>    
<!-- map.put("lblNo", lblNo);
map.put("checkedList", checkedList); -->
<update id="labelingUpt" parameterType="hashMap">
	update mail
	set 
		<if test="lblNo != 0">
 			lbl_no = #{lblNo}
		</if>
		<if test="lblNo == 0">
			lbl_no = null	
		</if>
			where
				email_no in (
				<foreach collection="checkedList" item="mailNo" separator=",">
					#{mailNo}
				</foreach>
				)
</update>
<update id="mailStarred" parameterType="hashmap">
	update mail 
	set starred = #{starred}
	where email_no = #{emailNo}
</update>

<update id="delLblFromMail" parameterType="int">
	update mail 
	set lbl_no = null
	where lbl_no = #{lblNo}
</update>

</mapper>