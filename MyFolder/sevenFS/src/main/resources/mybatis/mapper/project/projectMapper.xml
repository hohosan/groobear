<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.sevenfs.mapper.project.ProjectMapper">


 	<!-- 프로젝트 ResultMap -->
	<resultMap type="kr.or.ddit.sevenfs.vo.project.ProjectVO" id="projectResultMap">
		<id property="prjctNo" column="PRJCT_NO"/>
		<result property="ctgryNo" column="CTGRY_NO"/>
		<result property="prjctNm" column="PRJCT_NM"/>
		<result property="prjctCn" column="PRJCT_CN"/>
		<result property="prjctSttus" column="PRJCT_STTUS"/>
		<result property="prjctGrad" column="PRJCT_GRAD"/>
		<result property="prjctAdres" column="PRJCT_ADRES"/>
		<result property="prjctUrl" column="PRJCT_URL"/>
		<result property="prjctRcvordAmount" column="PRJCT_RCVORD_AMOUNT"/>
		<result property="prjctBeginDate" column="PRJCT_BEGIN_DATE"/>
		<result property="prjctEndDate" column="PRJCT_END_DATE"/>
		
		<!-- 프로젝트 참여자 컬렉션 매핑 -->
		<collection property="projectEmpVOList" ofType="kr.or.ddit.sevenfs.vo.project.ProjectEmpVO" column="PRJCT_NO" select="selectProjectEmps"/>
				
		<!-- 프로젝트 과제 컬렉션 매핑 -->
		<collection property="projectTaskVOList" ofType="kr.or.ddit.sevenfs.vo.project.ProjectTaskVO" column="PRJCT_NO" 
            select="kr.or.ddit.sevenfs.mapper.project.ProjectTaskMapper.selectProjectTasks"/>

	</resultMap>
	
	<!-- 프로젝트 참여자 ResultMap -->
	<resultMap type="kr.or.ddit.sevenfs.vo.project.ProjectEmpVO" id="projectEmpResultMap">
		<id property="prjctNo" column="PRJCT_NO"/>
		<id property="prtcpntEmpno" column="PRTCPNT_EMPNO"/>
		<result property="prtcpntRole" column="PRTCPNT_ROLE"/>
		<result property="prjctAuthor" column="PRJCT_AUTHOR"/>
		<result property="evlManEmpno" column="EVL_MAN_EMPNO"/>
		<result property="evlCn" column="EVL_CN"/>
		<result property="evlGrad" column="EVL_GRAD"/>
		<result property="evlWritngDt" column="EVL_WRITNG_DT"/>
		<result property="evlUpdtDt" column="EVL_UPDT_DT"/>
		<result property="secsnYn" column="SECSN_YN"/>
	
		<!-- 직원 정보 추가 -->
		<result property="emplNm" column="EMPL_NM"/>
		<result property="telno" column="TELNO"/>
		<result property="email" column="EMAIL"/>
		<result property="deptNm" column="DEPT_NM"/>
		<result property="posNm" column="POS_NM"/>
	</resultMap>

	
	<!-- 프로젝트 과제 ResultMap -->
	<resultMap type="kr.or.ddit.sevenfs.vo.project.ProjectTaskVO" id="projectTaskResultMap">
		<id property="taskNo" column="TASK_NO"/>
		<result property="prjctNo" column="PRJCT_NO"/>
		<result property="upperTaskNo" column="UPPER_TASK_NO"/>
		<result property="chargerEmpno" column="CHARGER_EMPNO"/>
		<result property="taskNm" column="TASK_NM"/>
		<result property="taskCn" column="TASK_CN"/>
		<result property="priort" column="PRIORT"/>
		<result property="taskGrad" column="TASK_GRAD"/>
		<result property="progrsrt" column="PROGRSRT"/>
		<result property="taskSttus" column="TASK_STTUS"/>
		<result property="atchFileNo" column="ATCH_FILE_NO"/>
		<result property="taskBeginDt" column="TASK_BEGIN_DT"/>
		<result property="taskDaycnt" column="TASK_DAYCNT"/>
		<result property="taskEndDt" column="TASK_END_DT"/>
		<!-- 추가적인 담당자 정보 -->
		<result property="chargerEmpNm" column="CHARGER_EMP_NM"/>
	</resultMap>



	<resultMap id="taskResultMap" type="kr.or.ddit.sevenfs.vo.project.ProjectTaskVO">
	    <result property="taskId" column="TASK_NO"/>
	    <result property="taskText" column="TASK_NM"/>
	    <result property="startDate" column="TASK_BEGIN_DT"/>
	    <result property="endDate" column="TASK_END_DT"/>
	    <result property="progress" column="PROGRSRT"/>
	    <result property="parentId" column="UPPER_TASK_NO"/>
	    <result property="owner" column="CHARGER_EMPNO"/>
	    <result property="status" column="TASK_STTUS"/>
	    <result property="priority" column="PRIORT"/>
	</resultMap>

<!-- 프로젝트 목록 조회 -->
	<select id="projectList" resultType="kr.or.ddit.sevenfs.vo.project.ProjectVO" parameterType="java.util.Map">
	    WITH A AS (
	        SELECT ROW_NUMBER() OVER (ORDER BY P.PRJCT_NO DESC) AS RNUM,
	               P.PRJCT_NO, C.CTGRY_NM, P.PRJCT_NM,
	               NVL(P_STATUS.CMMN_CODE_NM, '미정') AS PRJCT_STTUS_NM,
	               P.PRJCT_GRAD, P.PRJCT_BEGIN_DATE, P.PRJCT_END_DATE,
	               NVL(LISTAGG(E.EMPL_NM, ', ') WITHIN GROUP (ORDER BY E.EMPL_NM), '') AS PRTCPNT_NM
	        FROM PROJECT P
	        JOIN PROJECT_CATEGORY C ON P.CTGRY_NO = C.CTGRY_NO
	        LEFT JOIN PROJECT_EMP PE ON P.PRJCT_NO = PE.PRJCT_NO AND PE.PRTCPNT_ROLE = '00'
	        LEFT JOIN EMPLOYEE E ON PE.PRTCPNT_EMPNO = E.EMPL_NO
	        LEFT JOIN COMMON_CODE P_STATUS ON P_STATUS.CMMN_CODE_GROUP = 'PRJCT_STTUS'
	                                     AND P.PRJCT_STTUS = P_STATUS.CMMN_CODE
	        WHERE 1=1
	        <if test="keyword != null and keyword != ''">
	            AND (
	                P.PRJCT_NM LIKE '%' || #{keyword} || '%'
	                OR C.CTGRY_NM LIKE '%' || #{keyword} || '%'
	                OR E.EMPL_NM LIKE '%' || #{keyword} || '%'
	            )
	        </if>
	        GROUP BY P.PRJCT_NO, C.CTGRY_NM, P.PRJCT_NM, P_STATUS.CMMN_CODE_NM, 
	                 P.PRJCT_GRAD, P.PRJCT_BEGIN_DATE, P.PRJCT_END_DATE
	    )
	    SELECT A.*
	    FROM A
	    WHERE A.RNUM BETWEEN (#{currentPage} * #{size}) - (#{size} - 1)
	                  AND (#{currentPage} * #{size})
	</select>

    
    <!-- 프로젝트 전체 개수 조회 -->
    <select id="getTotal" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*)
        FROM (
            SELECT P.PRJCT_NO
            FROM PROJECT P
            JOIN PROJECT_CATEGORY C ON P.CTGRY_NO = C.CTGRY_NO
            LEFT JOIN PROJECT_EMP PE ON P.PRJCT_NO = PE.PRJCT_NO AND PE.PRTCPNT_ROLE = '00'
            LEFT JOIN EMPLOYEE E ON PE.PRTCPNT_EMPNO = E.EMPL_NO
            WHERE 1=1
            <if test="keyword != null and keyword != ''">
                AND (
                    P.PRJCT_NM LIKE '%' || #{keyword} || '%'
                    OR C.CTGRY_NM LIKE '%' || #{keyword} || '%'
                    OR E.EMPL_NM LIKE '%' || #{keyword} || '%'
                )
            </if>
            GROUP BY P.PRJCT_NO
        )
    </select>
	
	
	
	<!-- 프로젝트 참여자 조회 (프로젝트 번호 기준) -->
<select id="selectProjectEmps" parameterType="long" resultMap="projectEmpResultMap">
	SELECT 
		PE.PRJCT_NO,
		PE.PRTCPNT_EMPNO,
		PE.PRTCPNT_ROLE,
		PE.PRJCT_AUTHOR,
		PE.EVL_MAN_EMPNO,
		PE.EVL_CN,
		PE.EVL_GRAD,
		PE.EVL_WRITNG_DT,
		PE.EVL_UPDT_DT,
		PE.SECSN_YN,
		E.EMPL_NM AS EMPL_NM,
		E.TELNO AS TELNO,
		E.EMAIL AS EMAIL,
		DEPT.CMMN_CODE_NM AS DEPT_NM,
		POS.CMMN_CODE_NM AS POS_NM
	FROM PROJECT_EMP PE
	LEFT JOIN EMPLOYEE E ON PE.PRTCPNT_EMPNO = E.EMPL_NO
	LEFT JOIN COMMON_CODE DEPT 
		ON E.DEPT_CODE = DEPT.CMMN_CODE
		AND DEPT.CMMN_CODE_GROUP = 'DEPARTMENT'
	LEFT JOIN COMMON_CODE POS 
		ON E.CLSF_CODE = POS.CMMN_CODE
		AND POS.CMMN_CODE_GROUP = 'POSITION'
	WHERE PE.PRJCT_NO = #{prjctNo}
</select>

	
	<!-- 프로젝트 조회  -->
	<select id="projectDetail" parameterType="long" resultMap="projectResultMap">
	  SELECT 
	    P.PRJCT_NO, 
	    P.CTGRY_NO, 
	    C.CTGRY_NM,
	    P.PRJCT_NM, 
	    P.PRJCT_CN, 
	    P.PRJCT_STTUS, 
	    P.PRJCT_GRAD,
	    P.PRJCT_ADRES, 
	    P.PRJCT_URL, 
	    P.PRJCT_RCVORD_AMOUNT, 
	    P.PRJCT_BEGIN_DATE,  -- VARCHAR2 그대로
	    P.PRJCT_END_DATE,
	    CODE.CMMN_CODE_NM AS PRJCT_STTUS_NM
	  FROM PROJECT P
	  LEFT JOIN PROJECT_CATEGORY C ON P.CTGRY_NO = C.CTGRY_NO
	  LEFT JOIN COMMON_CODE CODE 
	    ON CODE.CMMN_CODE_GROUP = 'PRJCT_STTUS'
	    AND P.PRJCT_STTUS = CODE.CMMN_CODE
	  WHERE P.PRJCT_NO = #{prjctNo}
	</select>

    
	<insert id="insertProject" parameterType="kr.or.ddit.sevenfs.vo.project.ProjectVO">
	  <selectKey resultType="int" order="BEFORE" keyProperty="prjctNo">
	    SELECT SEQ_PROJECT.NEXTVAL FROM DUAL
	  </selectKey>
	  INSERT INTO PROJECT (
	    PRJCT_NO, CTGRY_NO, PRJCT_NM, PRJCT_CN, PRJCT_STTUS, PRJCT_GRAD,
	    PRJCT_ADRES, PRJCT_URL, PRJCT_RCVORD_AMOUNT, PRJCT_BEGIN_DATE, PRJCT_END_DATE
	  ) VALUES (
	    #{prjctNo}, #{ctgryNo}, #{prjctNm}, #{prjctCn}, #{prjctSttus}, #{prjctGrad},
	    #{prjctAdres}, #{prjctUrl}, #{prjctRcvordAmount}, REPLACE(#{prjctBeginDate}, '-', ''), REPLACE(#{prjctEndDate}, '-', '')
	  )
	</insert>


	
	
	<insert id="createProject" parameterType="kr.or.ddit.sevenfs.vo.project.ProjectVO">
    <selectKey keyProperty="prjctNo" resultType="int" order="BEFORE">
        SELECT SEQ_PROJECT.NEXTVAL FROM DUAL
    </selectKey>

    INSERT INTO PROJECT (
        PRJCT_NO, CTGRY_NO, PRJCT_NM, PRJCT_CN, PRJCT_STTUS, PRJCT_GRAD,
        PRJCT_ADRES, PRJCT_URL, PRJCT_RCVORD_AMOUNT, PRJCT_BEGIN_DATE, PRJCT_END_DATE
    ) VALUES (
        #{prjctNo}, #{ctgryNo}, #{prjctNm}, #{prjctCn}, #{prjctSttus},
        #{prjctGrad}, #{prjctAdres}, #{prjctUrl}, #{prjctRcvordAmount},
        #{prjctBeginDate}, #{prjctEndDate}
    )
</insert>
 <!-- list 라는 이름의 리스트를 순회하면서 , 각 아이템을 emp라는 이름으로 insert 구문사이에 ; 붙여서 여러게 insert 진행 -->
 
	<!-- 프로젝트 직원 등록  -->
	<insert id="insertProjectEmpBatch" parameterType="java.util.List">
	  BEGIN
	    <foreach collection="list" item="emp" separator=" ">
	      INSERT INTO PROJECT_EMP (
	        PRJCT_NO, PRTCPNT_EMPNO, PRTCPNT_ROLE, PRJCT_AUTHOR,
	        EVL_MAN_EMPNO, EVL_CN, EVL_GRAD, EVL_WRITNG_DT, SECSN_YN
	      )
	      SELECT
	        #{emp.prjctNo}, #{emp.prtcpntEmpno}, #{emp.prtcpntRole}, #{emp.prjctAuthor},
	        #{emp.evlManEmpno}, #{emp.evlCn}, #{emp.evlGrad}, SYSDATE, #{emp.secsnYn}
	      FROM DUAL
	      WHERE NOT EXISTS (
	        SELECT 1 FROM PROJECT_EMP
	        WHERE PRJCT_NO = #{emp.prjctNo}
	        AND PRTCPNT_EMPNO = #{emp.prtcpntEmpno}
	      );
	    </foreach>
	  END;
	</insert>




		
		
    <!-- 여러 과제 일괄 등록 -->
	<insert id="insertProjectTaskBatch" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";" open="BEGIN" close="END;">
			INSERT INTO PROJECT_TASK (
				TASK_NO, PRJCT_NO, UPPER_TASK_NO, CHARGER_EMPNO, TASK_NM,
				TASK_CN, PRIORT, TASK_GRAD, PROGRSRT, TASK_STTUS,
				ATCH_FILE_NO, TASK_BEGIN_DT, TASK_DAYCNT, TASK_END_DT
			) VALUES (
				#{item.taskNo}, #{item.prjctNo}, #{item.upperTaskNo, jdbcType=NUMERIC}, 
				#{item.chargerEmpno}, #{item.taskNm}, #{item.taskCn, jdbcType=VARCHAR},
				#{item.priort}, #{item.taskGrad}, #{item.progrsrt}, #{item.taskSttus},
				#{item.atchFileNo, jdbcType=NUMERIC}, #{item.taskBeginDt}, 
				#{item.taskDaycnt}, #{item.taskEndDt}
			)
		</foreach>
	</insert>
	
	<update id="nullifyUpperTaskReferences" parameterType="long">
	  UPDATE PROJECT_TASK
	  SET UPPER_TASK_NO = NULL
	  WHERE PRJCT_NO = #{prjctNo}
	</update>
	

	
	<!-- 프로젝트 삭제 -->
	<delete id="deleteProject" parameterType="long">
	  DELETE FROM PROJECT WHERE PRJCT_NO = #{prjctNo}
	</delete>
	
	<!-- 프로젝트 참여자 삭제 -->
<delete id="deleteProjectEmpsByProject" parameterType="long">
  DELETE FROM PROJECT_EMP
  WHERE PRJCT_NO = #{prjctNo}
</delete>

	<!-- 프로젝트 기본 정보 수정 -->
	<update id="updateProject" parameterType="kr.or.ddit.sevenfs.vo.project.ProjectVO">
	    UPDATE PROJECT
	    SET PRJCT_NM = #{prjctNm},
	        PRJCT_CN = #{prjctCn},
	        PRJCT_STTUS = #{prjctSttus},
	        PRJCT_GRAD = #{prjctGrad},
	        PRJCT_ADRES = #{prjctAdres},
	        PRJCT_URL = #{prjctUrl},
	        PRJCT_RCVORD_AMOUNT = #{prjctRcvordAmount},
	        PRJCT_BEGIN_DATE = #{prjctBeginDate},
	        PRJCT_END_DATE = #{prjctEndDate}
	    WHERE PRJCT_NO = #{prjctNo}
	</update>
	
	
	<!-- 새 프로젝트 참여자 추가 -->
	<insert id="insertProjectParticipant" parameterType="kr.or.ddit.sevenfs.vo.project.ProjectEmpVO">
	    INSERT INTO PROJECT_EMP (
	        PRJCT_NO,
	        PRTCPNT_EMPNO,
	        PRTCPNT_ROLE,
	        PRJCT_AUTHOR,
	        EVL_MAN_EMPNO,
	        EVL_CN,
	        EVL_GRAD,
	        EVL_WRITNG_DT,  
	        SECSN_YN
	    ) VALUES (
	        #{prjctNo},
	        #{prtcpntEmpno},
	        #{prtcpntRole},
	        '0000',
	        #{prtcpntEmpno},
	        '수정',
	        '1',
	        SYSDATE,       
	        'N'
	    )
	</insert>

<select id="selectProjectParticipants" resultType="kr.or.ddit.sevenfs.vo.project.ProjectEmpVO">
    SELECT PRTCPNT_EMPNO
    FROM PROJECT_EMP
    WHERE PRJCT_NO = #{prjctNo}
</select>

	<delete id="deleteProjectParticipant">
    DELETE FROM PROJECT_EMP
    WHERE PRJCT_NO = #{prjctNo}
      AND PRTCPNT_EMPNO = #{prtcpntEmpno}
</delete>
	
	<!-- 특정 프로젝트에 특정 사원이 이미 참여자로 등록되어 있는지 확인 -->
<select id="existsProjectParticipant" resultType="boolean">
  SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
  FROM PROJECT_EMP
  WHERE PRJCT_NO = #{prjctNo}
    AND PRTCPNT_EMPNO = #{empNo}
</select>


	
	
	
		<!-- 카테고리 리스트 -->
	<select id="getProjectCategoryList" resultType="map">
	  SELECT CTGRY_NO, CTGRY_NM FROM PROJECT_CATEGORY ORDER BY CTGRY_NO
	</select>
	
	<!-- 프로젝트 상태 리스트 (공통코드 PRJCT_STTUS) -->
	<select id="getProjectStatusList" resultType="map">
	  SELECT CMMN_CODE, CMMN_CODE_NM FROM COMMON_CODE
	  WHERE CMMN_CODE_GROUP = 'PRJCT_STTUS'
	  ORDER BY CMMN_CODE
	</select>
	
	<!-- 프로젝트 등급 리스트 (공통코드 PRJCT_GRAD) -->
	<select id="getProjectGradeList" resultType="map">
	  SELECT CMMN_CODE, CMMN_CODE_NM FROM COMMON_CODE
	  WHERE CMMN_CODE_GROUP = 'PRJCT_GRAD'
	  ORDER BY CMMN_CODE
	</select>
	
	<!-- 간트차트용  -->
	<select id="selectMaxProjectNo" resultType="int">
	  SELECT MAX(PRJCT_NO) FROM PROJECT
	</select>
	
	
	<select id="selectAllTasksByProject" resultMap="taskResultMap">
    SELECT 
        TASK_NO,
        TASK_NM,
        TASK_BEGIN_DT,
        TASK_END_DT,
        PROGRSRT,
        UPPER_TASK_NO,
        CHARGER_EMPNO,
        TASK_STTUS,
        PRIORT,
        TASK_DAYCNT
    FROM PROJECT_TASK
    WHERE PRJCT_NO = #{prjctNo}
</select>


	
	
	<select id="selectAllProjects" resultType="kr.or.ddit.sevenfs.vo.project.ProjectVO">
	    SELECT PRJCT_NO, PRJCT_NM 
	    FROM PROJECT 
	    ORDER BY PRJCT_NO DESC
	</select>
	
	<!-- 칸반보드용 추가 쿼리 -->
	
	<!-- 프로젝트 번호로 상세 정보 조회 (문자열 파라미터) -->
	<select id="selectProjectByNo" parameterType="string" resultMap="projectResultMap">
	  SELECT 
	    P.PRJCT_NO, 
	    P.CTGRY_NO, 
	    C.CTGRY_NM,
	    P.PRJCT_NM, 
	    P.PRJCT_CN, 
	    P.PRJCT_STTUS, 
	    P.PRJCT_GRAD,
	    P.PRJCT_ADRES, 
	    P.PRJCT_URL, 
	    P.PRJCT_RCVORD_AMOUNT, 
	    P.PRJCT_BEGIN_DATE,
	    P.PRJCT_END_DATE,
	    CODE.CMMN_CODE_NM AS PRJCT_STTUS_NM
	  FROM PROJECT P
	  LEFT JOIN PROJECT_CATEGORY C ON P.CTGRY_NO = C.CTGRY_NO
	  LEFT JOIN COMMON_CODE CODE 
	    ON CODE.CMMN_CODE_GROUP = 'PRJCT_STTUS'
	    AND P.PRJCT_STTUS = CODE.CMMN_CODE
	  WHERE P.PRJCT_NO = #{projectNo}
	</select>
	
	<!-- 상태별 프로젝트 목록 조회 -->
	<select id="selectProjectsByStatus" parameterType="string" resultType="kr.or.ddit.sevenfs.vo.project.ProjectVO">
	  SELECT 
	    P.PRJCT_NO, 
	    P.CTGRY_NO, 
	    C.CTGRY_NM,
	    P.PRJCT_NM, 
	    P.PRJCT_CN, 
	    P.PRJCT_STTUS, 
	    P.PRJCT_GRAD,
	    P.PRJCT_ADRES, 
	    P.PRJCT_URL, 
	    P.PRJCT_RCVORD_AMOUNT, 
	    P.PRJCT_BEGIN_DATE,
	    P.PRJCT_END_DATE,
	    CODE.CMMN_CODE_NM AS PRJCT_STTUS_NM,
	    E.EMPL_NM AS CHARGER_EMP_NM
	  FROM PROJECT P
	  LEFT JOIN PROJECT_CATEGORY C ON P.CTGRY_NO = C.CTGRY_NO
	  LEFT JOIN COMMON_CODE CODE 
	    ON CODE.CMMN_CODE_GROUP = 'PRJCT_STTUS'
	    AND P.PRJCT_STTUS = CODE.CMMN_CODE
	  LEFT JOIN PROJECT_EMP PE ON P.PRJCT_NO = PE.PRJCT_NO AND PE.PRTCPNT_ROLE = '00'
	  LEFT JOIN EMPLOYEE E ON PE.PRTCPNT_EMPNO = E.EMPL_NO
	  WHERE P.PRJCT_STTUS = #{status}
	  ORDER BY P.PRJCT_NO DESC
	</select>
	
	<!-- 프로젝트 상태 업데이트 -->
	<update id="updateProjectStatus">
	  UPDATE PROJECT
	  SET PRJCT_STTUS = #{status}
	  WHERE PRJCT_NO = #{projectNo}
	</update>
	
</mapper>